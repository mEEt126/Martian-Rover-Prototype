
driving_stearing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  000006ac  00000740  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000006ac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800110  00800110  00000750  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000750  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000780  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  000007bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011aa  00000000  00000000  00000884  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009e5  00000000  00000000  00001a2e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008b5  00000000  00000000  00002413  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  00002cc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000537  00000000  00000000  00002f10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000836  00000000  00000000  00003447  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00003c7d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	65 c0       	rjmp	.+202    	; 0xcc <__ctors_end>
   2:	00 00       	nop
   4:	24 c2       	rjmp	.+1096   	; 0x44e <__vector_1>
   6:	00 00       	nop
   8:	30 c2       	rjmp	.+1120   	; 0x46a <__vector_2>
   a:	00 00       	nop
   c:	3c c2       	rjmp	.+1144   	; 0x486 <__vector_3>
   e:	00 00       	nop
  10:	48 c2       	rjmp	.+1168   	; 0x4a2 <__vector_4>
  12:	00 00       	nop
  14:	54 c2       	rjmp	.+1192   	; 0x4be <__vector_5>
  16:	00 00       	nop
  18:	60 c2       	rjmp	.+1216   	; 0x4da <__vector_6>
  1a:	00 00       	nop
  1c:	6c c2       	rjmp	.+1240   	; 0x4f6 <__vector_7>
  1e:	00 00       	nop
  20:	78 c2       	rjmp	.+1264   	; 0x512 <__vector_8>
  22:	00 00       	nop
  24:	70 c0       	rjmp	.+224    	; 0x106 <__bad_interrupt>
  26:	00 00       	nop
  28:	6e c0       	rjmp	.+220    	; 0x106 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6c c0       	rjmp	.+216    	; 0x106 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6a c0       	rjmp	.+212    	; 0x106 <__bad_interrupt>
  32:	00 00       	nop
  34:	68 c0       	rjmp	.+208    	; 0x106 <__bad_interrupt>
  36:	00 00       	nop
  38:	66 c0       	rjmp	.+204    	; 0x106 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	64 c0       	rjmp	.+200    	; 0x106 <__bad_interrupt>
  3e:	00 00       	nop
  40:	62 c0       	rjmp	.+196    	; 0x106 <__bad_interrupt>
  42:	00 00       	nop
  44:	60 c0       	rjmp	.+192    	; 0x106 <__bad_interrupt>
  46:	00 00       	nop
  48:	5e c0       	rjmp	.+188    	; 0x106 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5c c0       	rjmp	.+184    	; 0x106 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5a c0       	rjmp	.+180    	; 0x106 <__bad_interrupt>
  52:	00 00       	nop
  54:	58 c0       	rjmp	.+176    	; 0x106 <__bad_interrupt>
  56:	00 00       	nop
  58:	56 c0       	rjmp	.+172    	; 0x106 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	54 c0       	rjmp	.+168    	; 0x106 <__bad_interrupt>
  5e:	00 00       	nop
  60:	52 c0       	rjmp	.+164    	; 0x106 <__bad_interrupt>
  62:	00 00       	nop
  64:	50 c0       	rjmp	.+160    	; 0x106 <__bad_interrupt>
  66:	00 00       	nop
  68:	4e c0       	rjmp	.+156    	; 0x106 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4c c0       	rjmp	.+152    	; 0x106 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4a c0       	rjmp	.+148    	; 0x106 <__bad_interrupt>
  72:	00 00       	nop
  74:	48 c0       	rjmp	.+144    	; 0x106 <__bad_interrupt>
  76:	00 00       	nop
  78:	46 c0       	rjmp	.+140    	; 0x106 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	44 c0       	rjmp	.+136    	; 0x106 <__bad_interrupt>
  7e:	00 00       	nop
  80:	42 c0       	rjmp	.+132    	; 0x106 <__bad_interrupt>
  82:	00 00       	nop
  84:	40 c0       	rjmp	.+128    	; 0x106 <__bad_interrupt>
  86:	00 00       	nop
  88:	3e c0       	rjmp	.+124    	; 0x106 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	12 01       	movw	r2, r4
  8e:	0c 01       	movw	r0, r24
  90:	06 01       	movw	r0, r12
  92:	00 01       	movw	r0, r0
  94:	fa 00       	.word	0x00fa	; ????
  96:	f4 00       	.word	0x00f4	; ????
  98:	ee 00       	.word	0x00ee	; ????
  9a:	e8 00       	.word	0x00e8	; ????
  9c:	e2 00       	.word	0x00e2	; ????
  9e:	dc 00       	.word	0x00dc	; ????
  a0:	d6 00       	.word	0x00d6	; ????
  a2:	d0 00       	.word	0x00d0	; ????
  a4:	ca 00       	.word	0x00ca	; ????
  a6:	c4 00       	.word	0x00c4	; ????
  a8:	be 00       	.word	0x00be	; ????
  aa:	b8 00       	.word	0x00b8	; ????
  ac:	a8 01       	movw	r20, r16
  ae:	a2 01       	movw	r20, r4
  b0:	9c 01       	movw	r18, r24
  b2:	96 01       	movw	r18, r12
  b4:	90 01       	movw	r18, r0
  b6:	8a 01       	movw	r16, r20
  b8:	84 01       	movw	r16, r8
  ba:	7e 01       	movw	r14, r28
  bc:	78 01       	movw	r14, r16
  be:	72 01       	movw	r14, r4
  c0:	6c 01       	movw	r12, r24
  c2:	66 01       	movw	r12, r12
  c4:	60 01       	movw	r12, r0
  c6:	5a 01       	movw	r10, r20
  c8:	54 01       	movw	r10, r8
  ca:	4e 01       	movw	r8, r28

000000cc <__ctors_end>:
  cc:	11 24       	eor	r1, r1
  ce:	1f be       	out	0x3f, r1	; 63
  d0:	cf ef       	ldi	r28, 0xFF	; 255
  d2:	d0 e1       	ldi	r29, 0x10	; 16
  d4:	de bf       	out	0x3e, r29	; 62
  d6:	cd bf       	out	0x3d, r28	; 61

000000d8 <__do_copy_data>:
  d8:	11 e0       	ldi	r17, 0x01	; 1
  da:	a0 e0       	ldi	r26, 0x00	; 0
  dc:	b1 e0       	ldi	r27, 0x01	; 1
  de:	ec ea       	ldi	r30, 0xAC	; 172
  e0:	f6 e0       	ldi	r31, 0x06	; 6
  e2:	00 e0       	ldi	r16, 0x00	; 0
  e4:	0b bf       	out	0x3b, r16	; 59
  e6:	02 c0       	rjmp	.+4      	; 0xec <__do_copy_data+0x14>
  e8:	07 90       	elpm	r0, Z+
  ea:	0d 92       	st	X+, r0
  ec:	a0 31       	cpi	r26, 0x10	; 16
  ee:	b1 07       	cpc	r27, r17
  f0:	d9 f7       	brne	.-10     	; 0xe8 <__do_copy_data+0x10>

000000f2 <__do_clear_bss>:
  f2:	21 e0       	ldi	r18, 0x01	; 1
  f4:	a0 e1       	ldi	r26, 0x10	; 16
  f6:	b1 e0       	ldi	r27, 0x01	; 1
  f8:	01 c0       	rjmp	.+2      	; 0xfc <.do_clear_bss_start>

000000fa <.do_clear_bss_loop>:
  fa:	1d 92       	st	X+, r1

000000fc <.do_clear_bss_start>:
  fc:	a1 31       	cpi	r26, 0x11	; 17
  fe:	b2 07       	cpc	r27, r18
 100:	e1 f7       	brne	.-8      	; 0xfa <.do_clear_bss_loop>
 102:	33 d1       	rcall	.+614    	; 0x36a <main>
 104:	d1 c2       	rjmp	.+1442   	; 0x6a8 <_exit>

00000106 <__bad_interrupt>:
 106:	7c cf       	rjmp	.-264    	; 0x0 <__vectors>

00000108 <interrupt_activation>:
		break;
	}
}

void stop(void)
{
 108:	8f ef       	ldi	r24, 0xFF	; 255
 10a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
 10e:	8a bf       	out	0x3a, r24	; 58
 110:	89 bf       	out	0x39, r24	; 57
 112:	08 95       	ret

00000114 <take_turn>:
 114:	cf 92       	push	r12
 116:	df 92       	push	r13
 118:	ef 92       	push	r14
 11a:	ff 92       	push	r15
 11c:	0f 93       	push	r16
 11e:	1f 93       	push	r17
 120:	cf 93       	push	r28
 122:	df 93       	push	r29
 124:	ec 01       	movw	r28, r24
 126:	6b 01       	movw	r12, r22
 128:	7a 01       	movw	r14, r20
 12a:	89 01       	movw	r16, r18
 12c:	60 e0       	ldi	r22, 0x00	; 0
 12e:	81 e6       	ldi	r24, 0x61	; 97
 130:	1c d2       	rcall	.+1080   	; 0x56a <USART_Transmitchar>
 132:	cc 0f       	add	r28, r28
 134:	dd 1f       	adc	r29, r29
 136:	cc 0d       	add	r28, r12
 138:	dd 1d       	adc	r29, r13
 13a:	cc 0f       	add	r28, r28
 13c:	dd 1f       	adc	r29, r29
 13e:	ce 0d       	add	r28, r14
 140:	df 1d       	adc	r29, r15
 142:	cc 0f       	add	r28, r28
 144:	dd 1f       	adc	r29, r29
 146:	c0 0f       	add	r28, r16
 148:	d1 1f       	adc	r29, r17
 14a:	8a e1       	ldi	r24, 0x1A	; 26
 14c:	8a 95       	dec	r24
 14e:	f1 f7       	brne	.-4      	; 0x14c <take_turn+0x38>
 150:	00 c0       	rjmp	.+0      	; 0x152 <take_turn+0x3e>
 152:	be 01       	movw	r22, r28
 154:	0d 2e       	mov	r0, r29
 156:	00 0c       	add	r0, r0
 158:	88 0b       	sbc	r24, r24
 15a:	99 0b       	sbc	r25, r25
 15c:	40 e0       	ldi	r20, 0x00	; 0
 15e:	21 d2       	rcall	.+1090   	; 0x5a2 <USART_TransmitNumber>
 160:	c0 31       	cpi	r28, 0x10	; 16
 162:	d1 05       	cpc	r29, r1
 164:	08 f0       	brcs	.+2      	; 0x168 <take_turn+0x54>
 166:	64 c0       	rjmp	.+200    	; 0x230 <take_turn+0x11c>
 168:	fe 01       	movw	r30, r28
 16a:	ea 5b       	subi	r30, 0xBA	; 186
 16c:	ff 4f       	sbci	r31, 0xFF	; 255
 16e:	71 c2       	rjmp	.+1250   	; 0x652 <__tablejump2__>
 170:	8f ef       	ldi	r24, 0xFF	; 255
 172:	85 bb       	out	0x15, r24	; 21
 174:	60 e0       	ldi	r22, 0x00	; 0
 176:	86 e4       	ldi	r24, 0x46	; 70
 178:	f8 d1       	rcall	.+1008   	; 0x56a <USART_Transmitchar>
 17a:	5d c0       	rjmp	.+186    	; 0x236 <take_turn+0x122>
 17c:	8f ee       	ldi	r24, 0xEF	; 239
 17e:	85 bb       	out	0x15, r24	; 21
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	85 e4       	ldi	r24, 0x45	; 69
 184:	f2 d1       	rcall	.+996    	; 0x56a <USART_Transmitchar>
 186:	57 c0       	rjmp	.+174    	; 0x236 <take_turn+0x122>
 188:	8f ed       	ldi	r24, 0xDF	; 223
 18a:	85 bb       	out	0x15, r24	; 21
 18c:	60 e0       	ldi	r22, 0x00	; 0
 18e:	84 e4       	ldi	r24, 0x44	; 68
 190:	ec d1       	rcall	.+984    	; 0x56a <USART_Transmitchar>
 192:	51 c0       	rjmp	.+162    	; 0x236 <take_turn+0x122>
 194:	8f ec       	ldi	r24, 0xCF	; 207
 196:	85 bb       	out	0x15, r24	; 21
 198:	60 e0       	ldi	r22, 0x00	; 0
 19a:	83 e4       	ldi	r24, 0x43	; 67
 19c:	e6 d1       	rcall	.+972    	; 0x56a <USART_Transmitchar>
 19e:	4b c0       	rjmp	.+150    	; 0x236 <take_turn+0x122>
 1a0:	8f eb       	ldi	r24, 0xBF	; 191
 1a2:	85 bb       	out	0x15, r24	; 21
 1a4:	60 e0       	ldi	r22, 0x00	; 0
 1a6:	82 e4       	ldi	r24, 0x42	; 66
 1a8:	e0 d1       	rcall	.+960    	; 0x56a <USART_Transmitchar>
 1aa:	45 c0       	rjmp	.+138    	; 0x236 <take_turn+0x122>
 1ac:	8f ea       	ldi	r24, 0xAF	; 175
 1ae:	85 bb       	out	0x15, r24	; 21
 1b0:	60 e0       	ldi	r22, 0x00	; 0
 1b2:	81 e4       	ldi	r24, 0x41	; 65
 1b4:	da d1       	rcall	.+948    	; 0x56a <USART_Transmitchar>
 1b6:	3f c0       	rjmp	.+126    	; 0x236 <take_turn+0x122>
 1b8:	8f e9       	ldi	r24, 0x9F	; 159
 1ba:	85 bb       	out	0x15, r24	; 21
 1bc:	60 e0       	ldi	r22, 0x00	; 0
 1be:	87 e4       	ldi	r24, 0x47	; 71
 1c0:	d4 d1       	rcall	.+936    	; 0x56a <USART_Transmitchar>
 1c2:	39 c0       	rjmp	.+114    	; 0x236 <take_turn+0x122>
 1c4:	8f e8       	ldi	r24, 0x8F	; 143
 1c6:	85 bb       	out	0x15, r24	; 21
 1c8:	60 e0       	ldi	r22, 0x00	; 0
 1ca:	88 e4       	ldi	r24, 0x48	; 72
 1cc:	ce d1       	rcall	.+924    	; 0x56a <USART_Transmitchar>
 1ce:	33 c0       	rjmp	.+102    	; 0x236 <take_turn+0x122>
 1d0:	8f e7       	ldi	r24, 0x7F	; 127
 1d2:	85 bb       	out	0x15, r24	; 21
 1d4:	60 e0       	ldi	r22, 0x00	; 0
 1d6:	89 e4       	ldi	r24, 0x49	; 73
 1d8:	c8 d1       	rcall	.+912    	; 0x56a <USART_Transmitchar>
 1da:	2d c0       	rjmp	.+90     	; 0x236 <take_turn+0x122>
 1dc:	8f e6       	ldi	r24, 0x6F	; 111
 1de:	85 bb       	out	0x15, r24	; 21
 1e0:	60 e0       	ldi	r22, 0x00	; 0
 1e2:	8a e4       	ldi	r24, 0x4A	; 74
 1e4:	c2 d1       	rcall	.+900    	; 0x56a <USART_Transmitchar>
 1e6:	27 c0       	rjmp	.+78     	; 0x236 <take_turn+0x122>
 1e8:	8f e5       	ldi	r24, 0x5F	; 95
 1ea:	85 bb       	out	0x15, r24	; 21
 1ec:	60 e0       	ldi	r22, 0x00	; 0
 1ee:	8b e4       	ldi	r24, 0x4B	; 75
 1f0:	bc d1       	rcall	.+888    	; 0x56a <USART_Transmitchar>
 1f2:	21 c0       	rjmp	.+66     	; 0x236 <take_turn+0x122>
 1f4:	8f e4       	ldi	r24, 0x4F	; 79
 1f6:	85 bb       	out	0x15, r24	; 21
 1f8:	60 e0       	ldi	r22, 0x00	; 0
 1fa:	8c e4       	ldi	r24, 0x4C	; 76
 1fc:	b6 d1       	rcall	.+876    	; 0x56a <USART_Transmitchar>
 1fe:	1b c0       	rjmp	.+54     	; 0x236 <take_turn+0x122>
 200:	8f e3       	ldi	r24, 0x3F	; 63
 202:	85 bb       	out	0x15, r24	; 21
 204:	60 e0       	ldi	r22, 0x00	; 0
 206:	8d e4       	ldi	r24, 0x4D	; 77
 208:	b0 d1       	rcall	.+864    	; 0x56a <USART_Transmitchar>
 20a:	15 c0       	rjmp	.+42     	; 0x236 <take_turn+0x122>
 20c:	8f e2       	ldi	r24, 0x2F	; 47
 20e:	85 bb       	out	0x15, r24	; 21
 210:	60 e0       	ldi	r22, 0x00	; 0
 212:	8e e4       	ldi	r24, 0x4E	; 78
 214:	aa d1       	rcall	.+852    	; 0x56a <USART_Transmitchar>
 216:	0f c0       	rjmp	.+30     	; 0x236 <take_turn+0x122>
 218:	8f e1       	ldi	r24, 0x1F	; 31
 21a:	85 bb       	out	0x15, r24	; 21
 21c:	60 e0       	ldi	r22, 0x00	; 0
 21e:	86 e5       	ldi	r24, 0x56	; 86
 220:	a4 d1       	rcall	.+840    	; 0x56a <USART_Transmitchar>
 222:	09 c0       	rjmp	.+18     	; 0x236 <take_turn+0x122>
 224:	8f e0       	ldi	r24, 0x0F	; 15
 226:	85 bb       	out	0x15, r24	; 21
 228:	60 e0       	ldi	r22, 0x00	; 0
 22a:	89 e6       	ldi	r24, 0x69	; 105
 22c:	9e d1       	rcall	.+828    	; 0x56a <USART_Transmitchar>
 22e:	03 c0       	rjmp	.+6      	; 0x236 <take_turn+0x122>
 230:	60 e0       	ldi	r22, 0x00	; 0
 232:	87 e7       	ldi	r24, 0x77	; 119
 234:	9a d1       	rcall	.+820    	; 0x56a <USART_Transmitchar>
 236:	df 91       	pop	r29
 238:	cf 91       	pop	r28
 23a:	1f 91       	pop	r17
 23c:	0f 91       	pop	r16
 23e:	ff 90       	pop	r15
 240:	ef 90       	pop	r14
 242:	df 90       	pop	r13
 244:	cf 90       	pop	r12
 246:	08 95       	ret

00000248 <take_u_turn>:
 248:	cf 92       	push	r12
 24a:	df 92       	push	r13
 24c:	ef 92       	push	r14
 24e:	ff 92       	push	r15
 250:	0f 93       	push	r16
 252:	1f 93       	push	r17
 254:	cf 93       	push	r28
 256:	df 93       	push	r29
 258:	ec 01       	movw	r28, r24
 25a:	6b 01       	movw	r12, r22
 25c:	7a 01       	movw	r14, r20
 25e:	89 01       	movw	r16, r18
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	87 e6       	ldi	r24, 0x67	; 103
 264:	82 d1       	rcall	.+772    	; 0x56a <USART_Transmitchar>
 266:	cc 0f       	add	r28, r28
 268:	dd 1f       	adc	r29, r29
 26a:	cc 0d       	add	r28, r12
 26c:	dd 1d       	adc	r29, r13
 26e:	cc 0f       	add	r28, r28
 270:	dd 1f       	adc	r29, r29
 272:	ce 0d       	add	r28, r14
 274:	df 1d       	adc	r29, r15
 276:	cc 0f       	add	r28, r28
 278:	dd 1f       	adc	r29, r29
 27a:	c0 0f       	add	r28, r16
 27c:	d1 1f       	adc	r29, r17
 27e:	be 01       	movw	r22, r28
 280:	0d 2e       	mov	r0, r29
 282:	00 0c       	add	r0, r0
 284:	88 0b       	sbc	r24, r24
 286:	99 0b       	sbc	r25, r25
 288:	40 e0       	ldi	r20, 0x00	; 0
 28a:	8b d1       	rcall	.+790    	; 0x5a2 <USART_TransmitNumber>
 28c:	c0 31       	cpi	r28, 0x10	; 16
 28e:	d1 05       	cpc	r29, r1
 290:	08 f0       	brcs	.+2      	; 0x294 <take_u_turn+0x4c>
 292:	62 c0       	rjmp	.+196    	; 0x358 <take_u_turn+0x110>
 294:	fe 01       	movw	r30, r28
 296:	ea 5a       	subi	r30, 0xAA	; 170
 298:	ff 4f       	sbci	r31, 0xFF	; 255
 29a:	db c1       	rjmp	.+950    	; 0x652 <__tablejump2__>
 29c:	80 ef       	ldi	r24, 0xF0	; 240
 29e:	85 bb       	out	0x15, r24	; 21
 2a0:	60 e0       	ldi	r22, 0x00	; 0
 2a2:	81 e6       	ldi	r24, 0x61	; 97
 2a4:	62 d1       	rcall	.+708    	; 0x56a <USART_Transmitchar>
 2a6:	58 c0       	rjmp	.+176    	; 0x358 <take_u_turn+0x110>
 2a8:	80 ee       	ldi	r24, 0xE0	; 224
 2aa:	85 bb       	out	0x15, r24	; 21
 2ac:	60 e0       	ldi	r22, 0x00	; 0
 2ae:	82 e6       	ldi	r24, 0x62	; 98
 2b0:	5c d1       	rcall	.+696    	; 0x56a <USART_Transmitchar>
 2b2:	52 c0       	rjmp	.+164    	; 0x358 <take_u_turn+0x110>
 2b4:	80 ed       	ldi	r24, 0xD0	; 208
 2b6:	85 bb       	out	0x15, r24	; 21
 2b8:	60 e0       	ldi	r22, 0x00	; 0
 2ba:	83 e6       	ldi	r24, 0x63	; 99
 2bc:	56 d1       	rcall	.+684    	; 0x56a <USART_Transmitchar>
 2be:	4c c0       	rjmp	.+152    	; 0x358 <take_u_turn+0x110>
 2c0:	80 ec       	ldi	r24, 0xC0	; 192
 2c2:	85 bb       	out	0x15, r24	; 21
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	84 e6       	ldi	r24, 0x64	; 100
 2c8:	50 d1       	rcall	.+672    	; 0x56a <USART_Transmitchar>
 2ca:	46 c0       	rjmp	.+140    	; 0x358 <take_u_turn+0x110>
 2cc:	80 eb       	ldi	r24, 0xB0	; 176
 2ce:	85 bb       	out	0x15, r24	; 21
 2d0:	60 e0       	ldi	r22, 0x00	; 0
 2d2:	85 e6       	ldi	r24, 0x65	; 101
 2d4:	4a d1       	rcall	.+660    	; 0x56a <USART_Transmitchar>
 2d6:	40 c0       	rjmp	.+128    	; 0x358 <take_u_turn+0x110>
 2d8:	80 ea       	ldi	r24, 0xA0	; 160
 2da:	85 bb       	out	0x15, r24	; 21
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	86 e6       	ldi	r24, 0x66	; 102
 2e0:	44 d1       	rcall	.+648    	; 0x56a <USART_Transmitchar>
 2e2:	3a c0       	rjmp	.+116    	; 0x358 <take_u_turn+0x110>
 2e4:	80 e9       	ldi	r24, 0x90	; 144
 2e6:	85 bb       	out	0x15, r24	; 21
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	87 e6       	ldi	r24, 0x67	; 103
 2ec:	3e d1       	rcall	.+636    	; 0x56a <USART_Transmitchar>
 2ee:	34 c0       	rjmp	.+104    	; 0x358 <take_u_turn+0x110>
 2f0:	80 e8       	ldi	r24, 0x80	; 128
 2f2:	85 bb       	out	0x15, r24	; 21
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	88 e6       	ldi	r24, 0x68	; 104
 2f8:	38 d1       	rcall	.+624    	; 0x56a <USART_Transmitchar>
 2fa:	2e c0       	rjmp	.+92     	; 0x358 <take_u_turn+0x110>
 2fc:	80 e7       	ldi	r24, 0x70	; 112
 2fe:	85 bb       	out	0x15, r24	; 21
 300:	60 e0       	ldi	r22, 0x00	; 0
 302:	89 e6       	ldi	r24, 0x69	; 105
 304:	32 d1       	rcall	.+612    	; 0x56a <USART_Transmitchar>
 306:	28 c0       	rjmp	.+80     	; 0x358 <take_u_turn+0x110>
 308:	80 e6       	ldi	r24, 0x60	; 96
 30a:	85 bb       	out	0x15, r24	; 21
 30c:	60 e0       	ldi	r22, 0x00	; 0
 30e:	8a e6       	ldi	r24, 0x6A	; 106
 310:	2c d1       	rcall	.+600    	; 0x56a <USART_Transmitchar>
 312:	22 c0       	rjmp	.+68     	; 0x358 <take_u_turn+0x110>
 314:	80 e5       	ldi	r24, 0x50	; 80
 316:	85 bb       	out	0x15, r24	; 21
 318:	60 e0       	ldi	r22, 0x00	; 0
 31a:	8b e6       	ldi	r24, 0x6B	; 107
 31c:	26 d1       	rcall	.+588    	; 0x56a <USART_Transmitchar>
 31e:	1c c0       	rjmp	.+56     	; 0x358 <take_u_turn+0x110>
 320:	80 e4       	ldi	r24, 0x40	; 64
 322:	85 bb       	out	0x15, r24	; 21
 324:	60 e0       	ldi	r22, 0x00	; 0
 326:	8d e6       	ldi	r24, 0x6D	; 109
 328:	20 d1       	rcall	.+576    	; 0x56a <USART_Transmitchar>
 32a:	16 c0       	rjmp	.+44     	; 0x358 <take_u_turn+0x110>
 32c:	80 e3       	ldi	r24, 0x30	; 48
 32e:	85 bb       	out	0x15, r24	; 21
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	8e e6       	ldi	r24, 0x6E	; 110
 334:	1a d1       	rcall	.+564    	; 0x56a <USART_Transmitchar>
 336:	10 c0       	rjmp	.+32     	; 0x358 <take_u_turn+0x110>
 338:	80 e2       	ldi	r24, 0x20	; 32
 33a:	85 bb       	out	0x15, r24	; 21
 33c:	60 e0       	ldi	r22, 0x00	; 0
 33e:	8f e6       	ldi	r24, 0x6F	; 111
 340:	14 d1       	rcall	.+552    	; 0x56a <USART_Transmitchar>
 342:	0a c0       	rjmp	.+20     	; 0x358 <take_u_turn+0x110>
 344:	80 e1       	ldi	r24, 0x10	; 16
 346:	85 bb       	out	0x15, r24	; 21
 348:	60 e0       	ldi	r22, 0x00	; 0
 34a:	80 e7       	ldi	r24, 0x70	; 112
 34c:	0e d1       	rcall	.+540    	; 0x56a <USART_Transmitchar>
 34e:	04 c0       	rjmp	.+8      	; 0x358 <take_u_turn+0x110>
 350:	15 ba       	out	0x15, r1	; 21
 352:	60 e0       	ldi	r22, 0x00	; 0
 354:	81 e7       	ldi	r24, 0x71	; 113
 356:	09 d1       	rcall	.+530    	; 0x56a <USART_Transmitchar>
 358:	df 91       	pop	r29
 35a:	cf 91       	pop	r28
 35c:	1f 91       	pop	r17
 35e:	0f 91       	pop	r16
 360:	ff 90       	pop	r15
 362:	ef 90       	pop	r14
 364:	df 90       	pop	r13
 366:	cf 90       	pop	r12
 368:	08 95       	ret

0000036a <main>:
 36a:	12 b8       	out	0x02, r1	; 2
 36c:	11 ba       	out	0x11, r1	; 17
 36e:	8f ef       	ldi	r24, 0xFF	; 255
 370:	84 bb       	out	0x14, r24	; 20
 372:	78 94       	sei
 374:	c9 de       	rcall	.-622    	; 0x108 <interrupt_activation>
 376:	60 e0       	ldi	r22, 0x00	; 0
 378:	83 e3       	ldi	r24, 0x33	; 51
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	d8 d0       	rcall	.+432    	; 0x52e <USART_Init>
 37e:	8a e1       	ldi	r24, 0x1A	; 26
 380:	8a 95       	dec	r24
 382:	f1 f7       	brne	.-4      	; 0x380 <main+0x16>
 384:	00 c0       	rjmp	.+0      	; 0x386 <main+0x1c>
 386:	61 e0       	ldi	r22, 0x01	; 1
 388:	83 e3       	ldi	r24, 0x33	; 51
 38a:	90 e0       	ldi	r25, 0x00	; 0
 38c:	d0 d0       	rcall	.+416    	; 0x52e <USART_Init>
 38e:	8a e1       	ldi	r24, 0x1A	; 26
 390:	8a 95       	dec	r24
 392:	f1 f7       	brne	.-4      	; 0x390 <main+0x26>
 394:	00 c0       	rjmp	.+0      	; 0x396 <main+0x2c>
 396:	c1 e0       	ldi	r28, 0x01	; 1
 398:	d0 e0       	ldi	r29, 0x00	; 0
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	f4 d0       	rcall	.+488    	; 0x586 <USART_Receive>
 39e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end>
 3a2:	83 36       	cpi	r24, 0x63	; 99
 3a4:	91 f4       	brne	.+36     	; 0x3ca <main+0x60>
 3a6:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <d>
 3aa:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <d+0x1>
 3ae:	40 91 0a 01 	lds	r20, 0x010A	; 0x80010a <c>
 3b2:	50 91 0b 01 	lds	r21, 0x010B	; 0x80010b <c+0x1>
 3b6:	60 91 0c 01 	lds	r22, 0x010C	; 0x80010c <b>
 3ba:	70 91 0d 01 	lds	r23, 0x010D	; 0x80010d <b+0x1>
 3be:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <a>
 3c2:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <a+0x1>
 3c6:	a6 de       	rcall	.-692    	; 0x114 <take_turn>
 3c8:	e8 cf       	rjmp	.-48     	; 0x39a <main+0x30>
 3ca:	82 37       	cpi	r24, 0x72	; 114
 3cc:	e1 f5       	brne	.+120    	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 3ce:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <D>
 3d2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <D+0x1>
 3d6:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <C>
 3da:	50 91 03 01 	lds	r21, 0x0103	; 0x800103 <C+0x1>
 3de:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <B>
 3e2:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <B+0x1>
 3e6:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <A>
 3ea:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <A+0x1>
 3ee:	2c df       	rcall	.-424    	; 0x248 <take_u_turn>
 3f0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <A>
 3f4:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <A+0x1>
 3f8:	89 2b       	or	r24, r25
 3fa:	79 f6       	brne	.-98     	; 0x39a <main+0x30>
 3fc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <B>
 400:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <B+0x1>
 404:	89 2b       	or	r24, r25
 406:	49 f6       	brne	.-110    	; 0x39a <main+0x30>
 408:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <C>
 40c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <C+0x1>
 410:	89 2b       	or	r24, r25
 412:	09 f0       	breq	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 414:	c2 cf       	rjmp	.-124    	; 0x39a <main+0x30>
 416:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <D>
 41a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <D+0x1>
 41e:	89 2b       	or	r24, r25
 420:	09 f0       	breq	.+2      	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 422:	bb cf       	rjmp	.-138    	; 0x39a <main+0x30>
 424:	d0 93 07 01 	sts	0x0107, r29	; 0x800107 <A+0x1>
 428:	c0 93 06 01 	sts	0x0106, r28	; 0x800106 <A>
 42c:	d0 93 05 01 	sts	0x0105, r29	; 0x800105 <B+0x1>
 430:	c0 93 04 01 	sts	0x0104, r28	; 0x800104 <B>
 434:	d0 93 03 01 	sts	0x0103, r29	; 0x800103 <C+0x1>
 438:	c0 93 02 01 	sts	0x0102, r28	; 0x800102 <C>
 43c:	d0 93 01 01 	sts	0x0101, r29	; 0x800101 <D+0x1>
 440:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <D>
 444:	aa cf       	rjmp	.-172    	; 0x39a <main+0x30>
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	83 e5       	ldi	r24, 0x53	; 83
 44a:	8f d0       	rcall	.+286    	; 0x56a <USART_Transmitchar>
 44c:	a6 cf       	rjmp	.-180    	; 0x39a <main+0x30>

0000044e <__vector_1>:
	// controll for steering system (complete closed)
}

ISR(INT0_vect)
{
 44e:	1f 92       	push	r1
 450:	0f 92       	push	r0
 452:	0f b6       	in	r0, 0x3f	; 63
 454:	0f 92       	push	r0
 456:	11 24       	eor	r1, r1
	a=0;
 458:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <a+0x1>
 45c:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <a>
}
 460:	0f 90       	pop	r0
 462:	0f be       	out	0x3f, r0	; 63
 464:	0f 90       	pop	r0
 466:	1f 90       	pop	r1
 468:	18 95       	reti

0000046a <__vector_2>:
ISR(INT1_vect)
{
 46a:	1f 92       	push	r1
 46c:	0f 92       	push	r0
 46e:	0f b6       	in	r0, 0x3f	; 63
 470:	0f 92       	push	r0
 472:	11 24       	eor	r1, r1
	b=0;
 474:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <b+0x1>
 478:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <b>
}
 47c:	0f 90       	pop	r0
 47e:	0f be       	out	0x3f, r0	; 63
 480:	0f 90       	pop	r0
 482:	1f 90       	pop	r1
 484:	18 95       	reti

00000486 <__vector_3>:
ISR(INT2_vect)
{
 486:	1f 92       	push	r1
 488:	0f 92       	push	r0
 48a:	0f b6       	in	r0, 0x3f	; 63
 48c:	0f 92       	push	r0
 48e:	11 24       	eor	r1, r1
	c=0;
 490:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <c+0x1>
 494:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <c>
}
 498:	0f 90       	pop	r0
 49a:	0f be       	out	0x3f, r0	; 63
 49c:	0f 90       	pop	r0
 49e:	1f 90       	pop	r1
 4a0:	18 95       	reti

000004a2 <__vector_4>:
ISR(INT3_vect)
{
 4a2:	1f 92       	push	r1
 4a4:	0f 92       	push	r0
 4a6:	0f b6       	in	r0, 0x3f	; 63
 4a8:	0f 92       	push	r0
 4aa:	11 24       	eor	r1, r1
	d=0;
 4ac:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <d+0x1>
 4b0:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <d>
}
 4b4:	0f 90       	pop	r0
 4b6:	0f be       	out	0x3f, r0	; 63
 4b8:	0f 90       	pop	r0
 4ba:	1f 90       	pop	r1
 4bc:	18 95       	reti

000004be <__vector_5>:
ISR(INT4_vect)
{
 4be:	1f 92       	push	r1
 4c0:	0f 92       	push	r0
 4c2:	0f b6       	in	r0, 0x3f	; 63
 4c4:	0f 92       	push	r0
 4c6:	11 24       	eor	r1, r1
	A=0;
 4c8:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <A+0x1>
 4cc:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <A>
}
 4d0:	0f 90       	pop	r0
 4d2:	0f be       	out	0x3f, r0	; 63
 4d4:	0f 90       	pop	r0
 4d6:	1f 90       	pop	r1
 4d8:	18 95       	reti

000004da <__vector_6>:
ISR(INT5_vect)
{
 4da:	1f 92       	push	r1
 4dc:	0f 92       	push	r0
 4de:	0f b6       	in	r0, 0x3f	; 63
 4e0:	0f 92       	push	r0
 4e2:	11 24       	eor	r1, r1
	B=0;
 4e4:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <B+0x1>
 4e8:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <B>
}
 4ec:	0f 90       	pop	r0
 4ee:	0f be       	out	0x3f, r0	; 63
 4f0:	0f 90       	pop	r0
 4f2:	1f 90       	pop	r1
 4f4:	18 95       	reti

000004f6 <__vector_7>:
ISR(INT6_vect)
{
 4f6:	1f 92       	push	r1
 4f8:	0f 92       	push	r0
 4fa:	0f b6       	in	r0, 0x3f	; 63
 4fc:	0f 92       	push	r0
 4fe:	11 24       	eor	r1, r1
	C=0;
 500:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <C+0x1>
 504:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <C>
}
 508:	0f 90       	pop	r0
 50a:	0f be       	out	0x3f, r0	; 63
 50c:	0f 90       	pop	r0
 50e:	1f 90       	pop	r1
 510:	18 95       	reti

00000512 <__vector_8>:
ISR(INT7_vect)
{
 512:	1f 92       	push	r1
 514:	0f 92       	push	r0
 516:	0f b6       	in	r0, 0x3f	; 63
 518:	0f 92       	push	r0
 51a:	11 24       	eor	r1, r1
	D=0;
 51c:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <D+0x1>
 520:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <D>
 524:	0f 90       	pop	r0
 526:	0f be       	out	0x3f, r0	; 63
 528:	0f 90       	pop	r0
 52a:	1f 90       	pop	r1
 52c:	18 95       	reti

0000052e <USART_Init>:
	 {
		 USART_Transmitchar(*str,n);
		 //_delay_ms(1);
		 str++;
	 }
}
 52e:	78 94       	sei
 530:	66 23       	and	r22, r22
 532:	79 f0       	breq	.+30     	; 0x552 <USART_Init+0x24>
 534:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 538:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 53c:	ea e9       	ldi	r30, 0x9A	; 154
 53e:	f0 e0       	ldi	r31, 0x00	; 0
 540:	80 81       	ld	r24, Z
 542:	88 61       	ori	r24, 0x18	; 24
 544:	80 83       	st	Z, r24
 546:	ed e9       	ldi	r30, 0x9D	; 157
 548:	f0 e0       	ldi	r31, 0x00	; 0
 54a:	80 81       	ld	r24, Z
 54c:	86 60       	ori	r24, 0x06	; 6
 54e:	80 83       	st	Z, r24
 550:	08 95       	ret
 552:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 556:	89 b9       	out	0x09, r24	; 9
 558:	8a b1       	in	r24, 0x0a	; 10
 55a:	88 61       	ori	r24, 0x18	; 24
 55c:	8a b9       	out	0x0a, r24	; 10
 55e:	e5 e9       	ldi	r30, 0x95	; 149
 560:	f0 e0       	ldi	r31, 0x00	; 0
 562:	80 81       	ld	r24, Z
 564:	86 60       	ori	r24, 0x06	; 6
 566:	80 83       	st	Z, r24
 568:	08 95       	ret

0000056a <USART_Transmitchar>:
 56a:	66 23       	and	r22, r22
 56c:	41 f0       	breq	.+16     	; 0x57e <USART_Transmitchar+0x14>
 56e:	eb e9       	ldi	r30, 0x9B	; 155
 570:	f0 e0       	ldi	r31, 0x00	; 0
 572:	90 81       	ld	r25, Z
 574:	95 ff       	sbrs	r25, 5
 576:	fd cf       	rjmp	.-6      	; 0x572 <USART_Transmitchar+0x8>
 578:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 57c:	08 95       	ret
 57e:	5d 9b       	sbis	0x0b, 5	; 11
 580:	fe cf       	rjmp	.-4      	; 0x57e <USART_Transmitchar+0x14>
 582:	8c b9       	out	0x0c, r24	; 12
 584:	08 95       	ret

00000586 <USART_Receive>:
 586:	88 23       	and	r24, r24
 588:	41 f0       	breq	.+16     	; 0x59a <USART_Receive+0x14>
 58a:	eb e9       	ldi	r30, 0x9B	; 155
 58c:	f0 e0       	ldi	r31, 0x00	; 0
 58e:	80 81       	ld	r24, Z
 590:	88 23       	and	r24, r24
 592:	ec f7       	brge	.-6      	; 0x58e <USART_Receive+0x8>
 594:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 598:	08 95       	ret
 59a:	5f 9b       	sbis	0x0b, 7	; 11
 59c:	fe cf       	rjmp	.-4      	; 0x59a <USART_Receive+0x14>
 59e:	8c b1       	in	r24, 0x0c	; 12
 5a0:	08 95       	ret

000005a2 <USART_TransmitNumber>:

void USART_TransmitNumber(long int num, uint8_t n)
{
 5a2:	bf 92       	push	r11
 5a4:	cf 92       	push	r12
 5a6:	df 92       	push	r13
 5a8:	ef 92       	push	r14
 5aa:	ff 92       	push	r15
 5ac:	0f 93       	push	r16
 5ae:	1f 93       	push	r17
 5b0:	cf 93       	push	r28
 5b2:	df 93       	push	r29
 5b4:	6b 01       	movw	r12, r22
 5b6:	7c 01       	movw	r14, r24
 5b8:	c4 2f       	mov	r28, r20
	if(num<0)
 5ba:	99 23       	and	r25, r25
 5bc:	5c f4       	brge	.+22     	; 0x5d4 <USART_TransmitNumber+0x32>
	{
		USART_Transmitchar('-',n);
 5be:	64 2f       	mov	r22, r20
 5c0:	8d e2       	ldi	r24, 0x2D	; 45
 5c2:	d3 df       	rcall	.-90     	; 0x56a <USART_Transmitchar>
		num=(-1)*num;
 5c4:	f0 94       	com	r15
 5c6:	e0 94       	com	r14
 5c8:	d0 94       	com	r13
 5ca:	c0 94       	com	r12
 5cc:	c1 1c       	adc	r12, r1
 5ce:	d1 1c       	adc	r13, r1
 5d0:	e1 1c       	adc	r14, r1
 5d2:	f1 1c       	adc	r15, r1
	}
	
	if(num >= 10){
 5d4:	8a e0       	ldi	r24, 0x0A	; 10
 5d6:	c8 16       	cp	r12, r24
 5d8:	d1 04       	cpc	r13, r1
 5da:	e1 04       	cpc	r14, r1
 5dc:	f1 04       	cpc	r15, r1
 5de:	7c f0       	brlt	.+30     	; 0x5fe <USART_TransmitNumber+0x5c>
    USART_TransmitNumber(num/10,n);
 5e0:	c7 01       	movw	r24, r14
 5e2:	b6 01       	movw	r22, r12
 5e4:	2a e0       	ldi	r18, 0x0A	; 10
 5e6:	30 e0       	ldi	r19, 0x00	; 0
 5e8:	40 e0       	ldi	r20, 0x00	; 0
 5ea:	50 e0       	ldi	r21, 0x00	; 0
 5ec:	16 d0       	rcall	.+44     	; 0x61a <__divmodsi4>
 5ee:	69 01       	movw	r12, r18
 5f0:	7a 01       	movw	r14, r20
 5f2:	b6 2e       	mov	r11, r22
 5f4:	4c 2f       	mov	r20, r28
 5f6:	c7 01       	movw	r24, r14
 5f8:	b6 01       	movw	r22, r12
 5fa:	d3 df       	rcall	.-90     	; 0x5a2 <USART_TransmitNumber>
    num = num%10;
  }
  USART_Transmitchar(num+'0',n); /* n is between 0 and 9 */
 5fc:	cb 2c       	mov	r12, r11
 5fe:	6c 2f       	mov	r22, r28
 600:	80 e3       	ldi	r24, 0x30	; 48
 602:	8c 0d       	add	r24, r12
	
}
 604:	b2 df       	rcall	.-156    	; 0x56a <USART_Transmitchar>
 606:	df 91       	pop	r29
 608:	cf 91       	pop	r28
 60a:	1f 91       	pop	r17
 60c:	0f 91       	pop	r16
 60e:	ff 90       	pop	r15
 610:	ef 90       	pop	r14
 612:	df 90       	pop	r13
 614:	cf 90       	pop	r12
 616:	bf 90       	pop	r11
 618:	08 95       	ret

0000061a <__divmodsi4>:
 61a:	05 2e       	mov	r0, r21
 61c:	97 fb       	bst	r25, 7
 61e:	16 f4       	brtc	.+4      	; 0x624 <__divmodsi4+0xa>
 620:	00 94       	com	r0
 622:	0f d0       	rcall	.+30     	; 0x642 <__negsi2>
 624:	57 fd       	sbrc	r21, 7
 626:	05 d0       	rcall	.+10     	; 0x632 <__divmodsi4_neg2>
 628:	1d d0       	rcall	.+58     	; 0x664 <__udivmodsi4>
 62a:	07 fc       	sbrc	r0, 7
 62c:	02 d0       	rcall	.+4      	; 0x632 <__divmodsi4_neg2>
 62e:	46 f4       	brtc	.+16     	; 0x640 <__divmodsi4_exit>
 630:	08 c0       	rjmp	.+16     	; 0x642 <__negsi2>

00000632 <__divmodsi4_neg2>:
 632:	50 95       	com	r21
 634:	40 95       	com	r20
 636:	30 95       	com	r19
 638:	21 95       	neg	r18
 63a:	3f 4f       	sbci	r19, 0xFF	; 255
 63c:	4f 4f       	sbci	r20, 0xFF	; 255
 63e:	5f 4f       	sbci	r21, 0xFF	; 255

00000640 <__divmodsi4_exit>:
 640:	08 95       	ret

00000642 <__negsi2>:
 642:	90 95       	com	r25
 644:	80 95       	com	r24
 646:	70 95       	com	r23
 648:	61 95       	neg	r22
 64a:	7f 4f       	sbci	r23, 0xFF	; 255
 64c:	8f 4f       	sbci	r24, 0xFF	; 255
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	08 95       	ret

00000652 <__tablejump2__>:
 652:	ee 0f       	add	r30, r30
 654:	ff 1f       	adc	r31, r31
 656:	00 24       	eor	r0, r0
 658:	00 1c       	adc	r0, r0
 65a:	0b be       	out	0x3b, r0	; 59
 65c:	07 90       	elpm	r0, Z+
 65e:	f6 91       	elpm	r31, Z
 660:	e0 2d       	mov	r30, r0
 662:	09 94       	ijmp

00000664 <__udivmodsi4>:
 664:	a1 e2       	ldi	r26, 0x21	; 33
 666:	1a 2e       	mov	r1, r26
 668:	aa 1b       	sub	r26, r26
 66a:	bb 1b       	sub	r27, r27
 66c:	fd 01       	movw	r30, r26
 66e:	0d c0       	rjmp	.+26     	; 0x68a <__udivmodsi4_ep>

00000670 <__udivmodsi4_loop>:
 670:	aa 1f       	adc	r26, r26
 672:	bb 1f       	adc	r27, r27
 674:	ee 1f       	adc	r30, r30
 676:	ff 1f       	adc	r31, r31
 678:	a2 17       	cp	r26, r18
 67a:	b3 07       	cpc	r27, r19
 67c:	e4 07       	cpc	r30, r20
 67e:	f5 07       	cpc	r31, r21
 680:	20 f0       	brcs	.+8      	; 0x68a <__udivmodsi4_ep>
 682:	a2 1b       	sub	r26, r18
 684:	b3 0b       	sbc	r27, r19
 686:	e4 0b       	sbc	r30, r20
 688:	f5 0b       	sbc	r31, r21

0000068a <__udivmodsi4_ep>:
 68a:	66 1f       	adc	r22, r22
 68c:	77 1f       	adc	r23, r23
 68e:	88 1f       	adc	r24, r24
 690:	99 1f       	adc	r25, r25
 692:	1a 94       	dec	r1
 694:	69 f7       	brne	.-38     	; 0x670 <__udivmodsi4_loop>
 696:	60 95       	com	r22
 698:	70 95       	com	r23
 69a:	80 95       	com	r24
 69c:	90 95       	com	r25
 69e:	9b 01       	movw	r18, r22
 6a0:	ac 01       	movw	r20, r24
 6a2:	bd 01       	movw	r22, r26
 6a4:	cf 01       	movw	r24, r30
 6a6:	08 95       	ret

000006a8 <_exit>:
 6a8:	f8 94       	cli

000006aa <__stop_program>:
 6aa:	ff cf       	rjmp	.-2      	; 0x6aa <__stop_program>
